# Generated by Django 4.2.6 on 2024-02-02 06:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('thesis', '0002_customuser_majors_customuser_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefenseCouncil',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('file_thesis', models.FileField(default='thesis.pdf', upload_to='file_thesis')),
                ('date_defend', models.DateField()),
                ('is_defend', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='customuser',
            options={'ordering': ['id']},
        ),
        migrations.CreateModel(
            name='ThesisScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True, null=True)),
                ('updated_date', models.DateField(auto_now=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('criteria', models.JSONField()),
                ('council', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='council_score', to='thesis.defensecouncil')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thesis_score', to='thesis.thesis')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='thesis',
            name='advisors',
            field=models.ManyToManyField(related_name='advisor_thesis', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='thesis',
            name='students',
            field=models.ManyToManyField(related_name='student_thesis', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='defensecouncil',
            name='members',
            field=models.ManyToManyField(related_name='members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='defensecouncil',
            name='president',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='president', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='defensecouncil',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='defensecouncil',
            name='secretary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secretary', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='defensecouncil',
            name='thesis',
            field=models.ManyToManyField(related_name='thesis_check', to='thesis.thesis'),
        ),
    ]
